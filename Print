using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Drawing.Printing;
using System.Threading.Tasks;


namespace LabelPrint
{
    public partial class preview : Form
    {
      
        

        
      // user clicked print button

 private void button1_Click(object sender, EventArgs e)
        {
                      
            printpanel(this.panelprint);

        }

        private void printpanel(Panel pn1)
        {
            PrinterSettings ps = new PrinterSettings();
            getprintarea(pn1);

            PrintDialog printDlg = new PrintDialog();
            PrintDocument printDoc = printDocument1;
            printDoc.PrintPage += new PrintPageEventHandler(printDocument1_PrintPage);
            printDoc.DocumentName = "Print Document";

            
           

            if (printDlg.ShowDialog() == DialogResult.OK)
            {

                printDoc.DefaultPageSettings.PaperSize = printDlg.PrinterSettings.DefaultPageSettings.PaperSize;
                printDoc.DefaultPageSettings.Landscape = printDlg.PrinterSettings.DefaultPageSettings.Landscape;
                printDoc.PrinterSettings.PrinterName = printDlg.PrinterSettings.PrinterName;
      

                //printDoc.DefaultPageSettings.PaperSize = new System.Drawing.Printing.PaperSize("label", panelprint.Width, panelprint.Height);
                printDoc.PrinterSettings.Copies = printDlg.PrinterSettings.Copies;
                printDoc.Print();
                Endprint endprint = new Endprint();
                endprint.tagnum = bag.ToString() + " Tags";
               
                this.Close();
            }


        }

        private Bitmap memoimg;
        private Bitmap memoimg2;
        
        private void getprintarea(Panel pn1)
        {
            
            memoimg = new Bitmap(pn1.Width,pn1.Height);
            memoimg2 = new Bitmap(certificate2.Width*10,certificate2.Height*10);
            pn1.DrawToBitmap(memoimg, new Rectangle(0, 0, pn1.Width, pn1.Height));
            certificate2.DrawToBitmap(memoimg2, new Rectangle(0, 0, certificate2.Width, certificate2.Height));
        }

  private void printDocument1_PrintPage(object sender, PrintPageEventArgs e)
        {
            
            SolidBrush brush = new SolidBrush(Color.Black);
            Font fontsmall;
            if(producteng.Text.Length>40)
            {
                fontsmall = new Font("Microsoft Sans Serif", 6);
            }
            else
            {
                fontsmall = new Font("Microsoft Sans Serif", 8);
            }
            Font font = new Font("Microsoft Sans Serif", 9);
            Font fontmedium = new Font("Microsoft Sans Serif", 11);
            Font fontbig = new Font("Sitka Subheading ", 14,FontStyle.Bold);

            PartDescription.Text = partdes; // part description could have more than 1 lines, it will be updated after preview, so user don't get confused.
            Rectangle pagearea = e.PageBounds;
            
           

           
            while (i<copies)
            {
                // reverse the label
                if(reversed== "Yes")
                {
                    
                    e.Graphics.TranslateTransform(panelprint.Width + 13, panelprint.Height);
                    e.Graphics.RotateTransform(180.0F, 0);
                }

                else
                {
                    e.Graphics.TranslateTransform( 50, 24);
                }
                
                
                //reverse label ends
               
           
                
                if(CustNamelabel.Text=="Swiss Water Decaffeinated Coffee")
                {
                    CustNamelabel.Text = "";
                }

                e.Graphics.DrawImage(printcustlogo1,  custmerlogo.Location.X + 7, tableLayoutPanel1.Location.Y + custmerlogo.Location.Y + 20,custmerlogo.Width+5,custmerlogo.Height+5);
                 e.Graphics.DrawString(So.Text, fontbig, brush, So.Location.X + 7, tableLayoutPanel1.Location.Y + So.Location.Y + 10);
                           

                if(i < copies) // continue adding new page until the end of bag number
                {
                    e.HasMorePages = true;
                    return;
                }
                
            }           
                            
        }

       

     

    

       
       
